src/hotkeyd.c: support restart after while end
src/input_dev.h: fix segfault if directories do not exist

Upstream: Not applicable

Signed-off-by: Jens Maus <mail@jens-maus.de>

--- a/src/hotkeyd.c
+++ b/src/hotkeyd.c
@@ -276,14 +276,14 @@ int main(int argc, char *argv[])
     signal(SIGTERM, on_close);
     signal(SIGCHLD, SIG_IGN);
 
-    if(!input) {
+    while(!input) {
         input = default_device();
-
         if(!input) {
             log_err("Failed to determine default device!\n");
-            return -1;
+            sleep(3);
         } else {
             free_input = 1;
+            break;
         }
     }
 
@@ -301,12 +301,16 @@ int main(int argc, char *argv[])
 
     if(free_input) {
         free(input);
+        input = NULL;
+        free_input = 0;
     }
 
     if(test_flag) {
         log_msg("Press ctrl+c to close:\n");
     }
 
+  loop:
+
     while(read(input_stream, &ev, sizeof(struct input_event)) > 0)
     {
         if(ev.type != EV_KEY) continue;
@@ -357,7 +361,42 @@ int main(int argc, char *argv[])
 
     }
 
-    on_close(0);
+    // restart
+    if(input_stream) {
+        close(input_stream);
+    }
+
+    while(!input) {
+        input = default_device();
+        if(!input) {
+            log_err("Failed to determine default device!\n");
+            sleep(3);
+        } else {
+            free_input = 1;
+            break;
+        }
+    }
+
+    input_stream = open(input, O_RDONLY);
+
+    if(input_stream == -1) {
+        log_err("Failed to open %s\n", input);
+        if(free_input) {
+            free(input);
+        }
+        return 1;
+    } else {
+        log_msg("Successfully opened %s\n", input);
+    }
+
+    if(free_input) {
+        free(input);
+        input = NULL;
+        free_input = 0;
+    }
+
+    // go to while loop start again
+    goto loop;
 
     return 0;
 }
diff --git a/src/input_dev.h b/src/input_dev.h
index 50ca29a..0181b6e 100644
--- a/src/input_dev.h
+++ b/src/input_dev.h
@@ -28,6 +28,7 @@ char *default_device()
 	char *tret = NULL;
 
 	d = opendir("/dev/input/by-id");
+	if(d) {
 	while( (ent = readdir(d)) )
 	{
 		if(is_keyboard(ent->d_name)) {
@@ -43,12 +44,14 @@ char *default_device()
 		}
 	}
 	closedir(d);
+	}
 
 	if(tret) {
 		return tret;
 	}
 
 	d = opendir("/dev/input/by-path");
+	if(d) {
 	while( (ent = readdir(d)) )
 	{
 		if(is_keyboard(ent->d_name)) {
@@ -64,6 +67,7 @@ char *default_device()
 		}
 	}
 	closedir(d);
+	}
 
 	if(tret) {
 		return tret;
